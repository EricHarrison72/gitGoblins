# ------------------------------------------------
# ci.yaml
#
# Contains instructions for running the GitHub Actions 
# continuous integration workflow.
#
# Resources that helped me write this file:
# > Carberra, "Unit testing Python code using Pytest + GitHub Actions", https://www.youtube.com/watch?v=0aEJBygCn5Q
# > Muhammed Ali, "HoneyBadger, Build a CI/CD pipeline for Flask apps using GitHub Actions", https://www.honeybadger.io/blog/flask-github-actions-continuous-delivery/
# > Stack Overflow, https://stackoverflow.com/questions/58139175/running-actions-in-another-directory/63122434#63122434
# -------------------------------------------------
name: CI

# Controls when the workflow will run
on:
  # Activated workflow before push or pull requests
  push:
  pull_request:

  # allows you to manually execute this pipeline from the Actions tab.
  workflow_dispatch:

# set the default working directory to be the code space	
defaults:
  run:
    working-directory: ./Code

# A workflow run consists of one or more jobs that can be executed either sequentially or concurrently.
jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

        #Carberra included way more Python versions, but let's keep it simple for now
        python-version:
          - "3.11"
          - "3.12"

    name: Test
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-Python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pip install -e .

      - name: Run Tests
        run: pytest 