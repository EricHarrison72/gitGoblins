{# 
This template expects the following parameters: 
 -- figure_html - a plotly figure object in html string form
 -- url_args - a dictionary with the keys: 
    - stat
    - city_name
    - start_date
    - end_date
#}
{% extends "base.html.jinja" %}
{% import 'helpers/selectors.html.jinja' as selectors %}

{% block title %}
    Graphs
{% endblock %}

{% block header %}
    Graphs
{% endblock %}

{% block content %}
    <div class="visualization-grid">
        
        {# Selection menus #}
        <div class="select-table-container">
            <br>
            <table class="select-table">
                <tr>
                    <th>Statistic</th>
                    <th>Location</th>
                    <th>Start date</th>
                    <th>End date</th>
                </tr>
                <tr>
                    <td>{{ selectors.select_stat( url_args['stat']) }}</td>
                    <td>{{ selectors.select_single_location( url_args['city_name']) }}</td>
                    <td>{{ selectors.select_date( 'start_', url_args['start_date']) }}</td>
                    <td>{{ selectors.select_date( 'end_', url_args['end_date']) }}</td>
                    <td>
                        <button onclick="reloadPageWithArgs(
                            `stat=${getStatFromSelection()}`
                            + `&city_name=${getCityFromSelection()}`
                            + `&start_date=${getDateFromSelection('start_')}`
                            + `&end_date=${getDateFromSelection('end_')}`
                        )">
                            Submit
                        </button>
                    </td>
                </tr>
            </table>

            <br>
        </div>

        {# graph title #}
        {% if url_args['stat'] != None %}
            <h2>
                {{ url_args['stat'].capitalize() }} Data for {{ url_args['city_name'] }} over Time
            </h2>
        {% endif %}

        {# TODO: DARKMODE GRAPHS #}

        {# embedded graph svg #}
        <div class="visualization"
            {% if url_args['stat'] == 'wind' %}
                style="justify-self: center; padding-top: 10px"
            {% endif %}
        >
            <div id="light-mode-graph">
                {{ graph_html }}
            </div>
            <div id="dark-mode-graph">
                <p> [PUT DARK GRAPH HERE] </p>
            </div>

            <script>
                updateGraph(); // (called here for initial page load)
            </script>
        </div>
    </div>
{% endblock %}

{% block scripts %}
  <script src="{{ url_for('static', filename='js/submit.js') }}"></script>
{% endblock %}